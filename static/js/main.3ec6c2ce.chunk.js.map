{"version":3,"sources":["components/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","tickHandler","setState","console","log","toLocaleTimeString","this","window","setInterval","clearInterval","className","props","name","React","Component","App","hasClock","clockName","getRandomName","value","Math","random","toString","slice","hideClock","showClock","document","addEventListener","_","prevState","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAeEC,YAAc,WACZ,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAE1BI,QAAQC,KAAI,IAAIL,MAAOM,uBAlB3B,uDAOE,WACEC,KAAKN,QAAUO,OAAOC,YAAYF,KAAKL,YAAa,OARxD,kCAWE,WACEQ,cAAcH,KAAKN,WAZvB,oBAqBE,WACE,OACE,sBAAKU,UAAU,QAAf,UACE,uDAAwBJ,KAAKK,MAAMC,QADrC,mBAEeN,KAAKT,MAAMC,KAAKO,6BAzBrC,GAA2BQ,IAAMC,WCD3BC,E,4MACJlB,MAAQ,CACNmB,UAAU,EACVC,UAAW,W,EAGbjB,QAAU,E,EA4BVkB,cAAgB,WACd,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,OAAO,EAAKrB,SAAS,CAAEe,UAAWE,K,EAGpCK,UAAY,WACV,EAAKtB,SAAS,CAAEc,UAAU,K,EAG5BS,UAAY,WACV,EAAKvB,SAAS,CAAEc,UAAU,K,uDArC5B,WACEV,KAAKY,gBAELZ,KAAKN,QAAUO,OAAOC,YAAYF,KAAKY,cAAe,MAEtDQ,SAASC,iBAAiB,cAAerB,KAAKkB,WAE9CE,SAASC,iBAAiB,QAASrB,KAAKmB,a,gCAG1C,SAAmBG,EAAOC,GACnBvB,KAAKT,MAAMmB,WACdP,cAAcH,KAAKN,SACnBM,KAAKN,QAAU,GAGZM,KAAKT,MAAMmB,WAAaV,KAAKN,UAChCM,KAAKN,QAAUO,OAAOC,YAAYF,KAAKY,cAAe,OAGpDW,EAAUZ,YAAcX,KAAKT,MAAMoB,WAErCd,QAAQC,IAAR,uBAA4ByB,EAAUZ,UAAtC,eAAsDX,KAAKT,MAAMoB,c,oBAkBrE,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCJ,KAAKT,MAAMmB,UAAY,cAAC,EAAD,CAAOJ,KAAMN,KAAKT,MAAMoB,mB,GApDtCJ,IAAMC,WA0DTC,IChEfe,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.3ec6c2ce.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.tickHandler, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tickHandler = () => {\n    this.setState({ date: new Date() });\n    // eslint-disable-next-line no-console\n    console.log(new Date().toLocaleTimeString());\n  };\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <strong>{`Clock-name: ${this.props.name}`}</strong>\n        {` time is ${this.state.date.toLocaleTimeString()}`}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string | void;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'initial',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.getRandomName();\n\n    this.timerId = window.setInterval(this.getRandomName, 3300);\n\n    document.addEventListener('contextmenu', this.hideClock);\n\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentDidUpdate(_: {}, prevState: State) {\n    if (!this.state.hasClock) {\n      clearInterval(this.timerId);\n      this.timerId = 0;\n    }\n\n    if ((this.state.hasClock && !this.timerId)) {\n      this.timerId = window.setInterval(this.getRandomName, 3300);\n    }\n\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  getRandomName = () => {\n    const value = Math.random().toString().slice(2, 6);\n\n    return this.setState({ clockName: value });\n  };\n\n  hideClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}